// Apply plugins required for project
plugins {
	// Add java library
    id 'java-library'
}

// Update plugin information
base {
	group = project.group
	archivesBaseName = project.modid
	version = project.version
}

// Compile for java 19
java.targetCompatibility = java.sourceCompatibility = JavaVersion.VERSION_19

// Add repositories required for project
repositories {
	// Add papermc repository for api
    maven { url "https://papermc.io/repo/repository/maven-public/" }
}

// Add velocity api
dependencies {
	// Add velocity api for compile time and as annotation processor
    compileOnly "com.velocitypowered:velocity-api:${velocity_version}"
    annotationProcessor "com.velocitypowered:velocity-api:${velocity_version}"
    
	// Add lombok processor
	compileOnly "org.projectlombok:lombok:${project.lombok_version}"
	annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
}

task clearGeneratedResources(type: Delete) {
    delete "$buildDir/generated/java"
}

// Create a custom task for replacing properties
task replaceProperties(type: Copy) {
	from "src/main/java"
    into "$buildDir/generated/java"
    
    expand('modid': project.modid, 'version': project.version)
}

compileJava {
	dependsOn 'clearGeneratedResources'
	dependsOn 'replaceProperties'
	compileJava.source = "$buildDir/generated/java"
	exclude "src/main/java"
}

// Upload plugin to server [login via key]
task upload(type: Exec) {
	workingDir "${buildDir}/libs"
	commandLine "cmd.exe /k echo put ${project.modid}-${project.version}.jar | sftp -oPort=13524 pancake@mgnet.work".split(" ")
}

// Copy plugin to proxy server
task copyPlugin(type: Exec) {
	workingDir "${buildDir}/libs"
	commandLine "ssh -p 13524 pancake@mgnet.work echo ${pancake_password} | sudo -S -u root cp /home/pancake/${project.modid}-${project.version}.jar /home/tasbattle/proxy/plugins/${project.modid}-${project.version}.jar".split(" ")
}

// Restart proxy server
task restartServer(type: Exec) {
	workingDir "${buildDir}/libs"
	commandLine "ssh -p 13524 pancake@mgnet.work echo ${pancake_password} | sudo -S -u root systemctl restart tasbattle-proxy".split(" ")
}

upload.dependsOn = ['build']
upload.finalizedBy(copyPlugin)
copyPlugin.finalizedBy(restartServer)
upload.group = 'tasbattle'
